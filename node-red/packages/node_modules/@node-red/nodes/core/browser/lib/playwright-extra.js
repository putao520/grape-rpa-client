function ExtraHandle(elementHandle) {
    this.locator  = elementHandle
    this.removeAttribute = function(attribute) {
        return this.locator.evaluate((node, attribute) => node.removeAttribute(attribute), attribute);
    }
    this.setAttribute = function(attribute, value) {
        return this.locator.evaluate((node, args) => {
            const {attribute, value} = args
            node.setAttribute(attribute, value)
        }, {attribute, value});
    }
    this.setStyle = function(attribute, value) {
        return this.locator.evaluate((node, args) => {
            const {attribute, value} = args
            node.style[attribute] = value
        }, {attribute, value});
    }
    this.selectOptionByIndex = function(selectedNth) {
        return this.locator.evaluate((node, selectedNth) => {
            const count = node.options.length
            if( selectedNth === 0 ){
                selectedNth = 1
            }
            selectedNth > 0 ?
                node.selectedIndex = selectedNth - 1 :
                node.selectedIndex = (count + selectedNth)
        }, selectedNth);
    }
    this.selectOptionMultiple = function(taskArray) {
        return this.locator.evaluate((node, taskArray) => {
            for(let v of taskArray){
                switch (v.type){
                    case "order":{
                        if( v.index === 0 ){
                            v.index = 1
                        }
                        const nth = v.index > 0 ? (v.index-1) : node.options.length + v.index
                        // console.log("nth: " + nth)
                        const option = node.options[nth]
                        if( option ){
                            option.selected = true
                        }
                        break
                    }
                    case "value":{
                        // 找到 node.options 中 value 为 v.value 的元素
                        const option = Array.from(node.options).find(item => item.value === v.text)
                        if( option ){
                            option.selected = true
                        }
                        break
                    }
                    case "label":{
                        // 找到 node.options 中 text 为 v.text 的元素
                        const option = Array.from(node.options).find(item => item.text === v.text)
                        if( option ){
                            option.selected = true
                        }
                    }
                }
            }
        }, taskArray);
    }

    this.play = function() {
        return this.locator.evaluate(node => {
            node.play()
        });
    }
    this.stop = function() {
        return this.locator.evaluate(node => {
            node.pause()
        });
    }
    this.mute = function(enable) {
        return this.locator.evaluate((node, enable) => {
            node.muted = enable
        }, enable);
    }

    // 获取文件列表
    this.getInputFiles = function() {
        return this.locator.evaluate(node => {
            return node.files
        });
    }

    // 获取radio所有选项的值
    this.getRadioValues = function() {
        return this.locator.evaluate(node => {
            const result = []
            const name = node.name
            document.querySelectorAll(`input[name='${name}']`).forEach(item => {
                result.push(item.value)
            })
            return result
        });
    }
    // 获取以选中的radio的值
    this.getCheckedRadioValue = function() {
        return this.locator.evaluate(node => {
            const name = node.name
            const el = document.querySelector(`input[name='${name}']:checked`)
            return el ? el.value : ""
        });
    }
    // 获取以选中的radio的序号
    this.getCheckedRadioNth = function() {
        return this.locator.evaluate(node => {
            const name = node.name
            const arr = document.querySelectorAll(`input[name='${name}']`)
            for(let i=0; i<arr.length; i++){
                if( arr[i].checked ){
                    return i
                }
            }
            return -1
        });
    }

    function _getSelectOptions(node){
        const result = []
        node.options.forEach(item => {
            result.push({
                label: item.label,
                value: item.value
            })
        })
        return result
    }
    // 获取Select所有选项的标签和值
    this.getSelectOptions = function() {
        return this.locator.evaluate(node => {
            return _getSelectOptions(node)
        });
    }
    // 获取Select所有选项的标签
    this.getSelectOptionsLabel = function() {
        return this.locator.evaluate(node => {
            const result = []
            _getSelectOptions(node).forEach(item => {
                result.push(item.label)
            })
            return result
        });
    }
    // 获取Select所有选项的值
    this.getSelectOptionsValue = function() {
        return this.locator.evaluate(node => {
            const result = []
            _getSelectOptions(node).forEach(item => {
                result.push(item.value)
            })
            return result
        });
    }
    function _getSelectOptionsSelect(node){
        const result = []
        const nth = node.options.selectedIndex
        if( nth >= 0 ){
            for(let i=0; i<node.options.length; i++){
                if( node.options[i].selected ){
                    result.push({
                        nth: i,
                        label: node.options[i].label,
                        value: node.options[i].value
                    })
                }
            }
        }
        return result
    }
    // 获取Select选中的选项的标签和值
    this.getSelectedSelectOptions = function() {
        return this.locator.evaluate(node => {
            return _getSelectOptionsSelect(node)
        });
    }
    // 获取Select选中的选项的标签
    this.getSelectedSelectOptionsLabel = function() {
        return this.locator.evaluate(node => {
            const result = []
            _getSelectOptionsSelect(node).forEach(item => {
                result.push(item.label)
            })
            return result
        });
    }
    // 获取Select选中的选项的值
    this.getSelectedSelectOptionsValue = function() {
        return this.locator.evaluate(node => {
            const result = []
            _getSelectOptionsSelect(node).forEach(item => {
                result.push(item.value)
            })
            return result
        });
    }
    // 获取Select选中的选项的序号
    this.getSelectedSelectOptionsNth = function() {
        return this.locator.evaluate(node => {
            const result = []
            _getSelectOptionsSelect(node).forEach(item => {
                result.push(item.nth)
            })
            return result
        });
    }
}

module.exports = ExtraHandle
