function initInputFileControl(fileControlObjectArray, filesControlObjectArray, folderControlObjectArray){
    for(let filePair of fileControlObjectArray){
        const {text, input, label} = filePair;
        const textDom = $(text)
        const labelDom = $(label)
        textDom.change(function(){
            labelDom.text(textDom.val());
        })
        $(input).change(function (){
            const fileAddr = this.files[0].path;
            textDom.val(fileAddr);
            textDom.trigger('change');
        });
        labelDom.text(textDom.val());
    }
    for(let filesPair of filesControlObjectArray){
        const {text, input, label} = filesPair;
        const textDom = $(text)
        const labelDom = $(label)
        const fnShow = function(){
            const text = textDom.val();
            const html = text.replace(/;/g, "<br>");
            labelDom.html(html);
        }
        textDom.change(function(){
            fnShow()
        })
        $(input).change(function (){
            let pathArray = [];
            for(let file of this.files){
                pathArray.push(file.path);
            }
            textDom.val(pathArray.join(";"));
            textDom.trigger('change');
        });
        fnShow()
    }
    for(let folderPair of folderControlObjectArray){
        const {text, input, label} = folderPair;
        const textDom = $(text)
        const labelDom = $(label)
        const fnShow = function(){
            const text = textDom.val();
            const html = text.replace(/;/g, "<br>");
            labelDom.html(html);
        }
        textDom.change(function(){
            fnShow()
        })
        $(input).change(function (){
            let pathArray = [];
            for(let file of this.files){
                pathArray.push(file.path);
            }
            textDom.val(pathArray.join(";"));
            textDom.trigger('change');
        });
        fnShow();
    }
}
